
version: '3.8'
services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ordersdb
      POSTGRES_USER: orders
      POSTGRES_PASSWORD: orderspass
    ports:
      - "5432:5432"

  otel-collector:
    # image: otel/opentelemetry-collector-contrib:0.114.0
    image: honeycombio/honeycomb-opentelemetry-collector:latest
#    build:
#      context: packages/client
#      dockerfile: Dockerfile
#      args:
#        - SYMBOLS_PATH=/symbols
#      target: collector-local
    volumes:
      - ./otel-collector/otel-collector-config.yaml:/config.yaml
    environment:
      HONEYCOMB_API_KEY: ${HONEYCOMB_API_KEY}
    env_file:
      - ./.env
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver

#  app:
#    build: .
#    ports:
#      - "8080:8080"
#    env_file:
#      - .env
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ordersdb
#      SPRING_DATASOURCE_USERNAME: orders
#      SPRING_DATASOURCE_PASSWORD: orderspass
#      OTEL_SERVICE_NAME: springboot-orders-api
#      OTEL_EXPORTER_OTLP_HEADERS: "x-honeycomb-team=${HONEYCOMB_API_KEY},x-honeycomb-dataset=${HONEYCOMB_DATASET}"
#      OTEL_EXPORTER_OTLP_ENDPOINT: https://api.honeycomb.io:443
#    depends_on:
#      - postgres
